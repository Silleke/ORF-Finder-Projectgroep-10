/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FileHandler;

import ORF.findORF;
import javax.swing.JOptionPane;
import sql_con.SQL_con;

/**
 *
 * @author amberjanssengroesbeek
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tf_Path = new javax.swing.JTextField();
        bladerButton = new javax.swing.JButton();
        controleerButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        searchORFbutton = new javax.swing.JButton();
        exportORFButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ta_Statistics = new javax.swing.JTextArea();
        database_item_button = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        ta_databaseItems = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tf_Path.setBackground(new java.awt.Color(204, 204, 204));

        bladerButton.setText("Bladeren");
        bladerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bladerButtonActionPerformed(evt);
            }
        });

        controleerButton.setText("Controleren");
        controleerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                controleerButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("File");

        searchORFbutton.setText("Search ORF");
        searchORFbutton.setEnabled(false);
        searchORFbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchORFbuttonActionPerformed(evt);
            }
        });

        exportORFButton.setText("Export ORF");
        exportORFButton.setEnabled(false);
        exportORFButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportORFButtonActionPerformed(evt);
            }
        });

        ta_Statistics.setBackground(new java.awt.Color(204, 204, 204));
        ta_Statistics.setColumns(20);
        ta_Statistics.setRows(5);
        jScrollPane1.setViewportView(ta_Statistics);

        database_item_button.setText("View database items");
        database_item_button.setEnabled(false);
        database_item_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                database_item_buttonActionPerformed(evt);
            }
        });

        ta_databaseItems.setBackground(new java.awt.Color(204, 204, 204));
        ta_databaseItems.setColumns(20);
        ta_databaseItems.setRows(5);
        jScrollPane2.setViewportView(ta_databaseItems);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(tf_Path, javax.swing.GroupLayout.DEFAULT_SIZE, 483, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(bladerButton))
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(database_item_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(exportORFButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(searchORFbutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(controleerButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(41, 41, 41))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_Path, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bladerButton)
                    .addComponent(jLabel1)
                    .addComponent(controleerButton))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(searchORFbutton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(exportORFButton))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(database_item_button)
                        .addGap(101, 101, 101))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(26, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bladerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bladerButtonActionPerformed
        FileChooser bladerBestand = new FileChooser();
        bladerBestand.ChooseFile();
        
        // pad toegevoegd aan textfield. Verkregen uit de class Bladeren. 
        tf_Path.setText(bladerBestand.getPath());
    }//GEN-LAST:event_bladerButtonActionPerformed

    private void controleerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_controleerButtonActionPerformed
        FileReader reader = new FileReader();
        try {
            // FileReader class wordt aangeroepen waarin het pad van het bestand wordt meegegeven. 
            reader.Read(tf_Path.getText());
        } catch (NotNuclSequence ex) {
            JOptionPane.showMessageDialog(null, "Dit is geen DNA sequentie!", "Fout melding", JOptionPane.ERROR_MESSAGE);
        }
        
        // nadat de template strand is aangemaakt, wordt a.d.h.v de template strand de complementaire strand gemaakt.
        reader.setComplementStrand();
        
        // als de complementaire streng gegenereerd is, dan is de DNA sequentie goedgekeurd. 
        if(!reader.getComplementStrand().isEmpty()){
            ta_Statistics.setText("Goede DNA sequentie!");
        }
        
        // Als de textarea niet leeg is, dan staat er goede DNA sequentie dus kan er een ORF gezocht worden. Als het geen DNA sequentie is, kan er geen ORF gezocht worden
        if(!ta_Statistics.getText().isEmpty()){
            searchORFbutton.setEnabled(rootPaneCheckingEnabled);
        }
    }//GEN-LAST:event_controleerButtonActionPerformed

    private void searchORFbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchORFbuttonActionPerformed
        // De gebruiker geeft aan hoelang het ORF minimaal moet zijn, default staat op 100 nucleotiden lang
        String settings = JOptionPane.showInputDialog("ORF length: ", 100);
        
        findORF orf = new findORF();
        orf.setORF(settings);
        
        // Als er op de search button wordt geklikt, dan wordt de text area leeg gemaakt.
        ta_Statistics.setText(null);
        
        // Doormiddel van de indexen van de arraylists de statistieken van de template strand in de text area zetten.
        for (int ArrayIndex_Temp = 0; ArrayIndex_Temp < orf.getORFsequenceTemp().size(); ArrayIndex_Temp++) {
            ta_Statistics.append("ORF template strand: " + "\t" +orf.getORFsequenceTemp().get(ArrayIndex_Temp) + "\n" +
                    "Positie start codon: " + "\t" + orf.getORFstartTemp().get(ArrayIndex_Temp) + "\n" + 
                    "Positie stop codon: " + "\t" + orf.getORFendTemp().get(ArrayIndex_Temp) + "\n" + 
                    "Reading frame: " + "\t" + "+" + orf.getORFrfTemp().get(ArrayIndex_Temp) + "\n\n");
        }
        
        // Doormiddel van de indexen van de arraylists de statistieken van de complement strand in de text area zetten.
        for (int ArrayIndex_Comp = 0; ArrayIndex_Comp < orf.getORFsequenceComp().size(); ArrayIndex_Comp++) {
            ta_Statistics.append("ORF complement strand: " + "\t" +orf.getORFsequenceComp().get(ArrayIndex_Comp) + "\n" +
                    "Positie start codon: " + "\t" + orf.getORFstartComp().get(ArrayIndex_Comp) + "\n" +
                    "Positie stop codon: " + "\t" + orf.getORFendComp().get(ArrayIndex_Comp) + "\n" +
                    "Reading frame: " + "\t" + "-" + orf.getORFrfComp().get(ArrayIndex_Comp) + "\n\n");        
        }
        
        // Als de textarea niet leeg is, dan zijn er waardes om te exporteren dus kan de button enabled worden. 
        if(!ta_Statistics.getText().isEmpty()){
            exportORFButton.setEnabled(rootPaneCheckingEnabled);
            database_item_button.setEnabled(rootPaneCheckingEnabled);
        }else{
            ta_Statistics.append("Er kan niets geëxporteerd worden");
        }
    }//GEN-LAST:event_searchORFbuttonActionPerformed

    private void exportORFButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportORFButtonActionPerformed
        SQL_con con = new SQL_con();
        con.connect();
        con.getDatabaseItems();
    }//GEN-LAST:event_exportORFButtonActionPerformed

    private void database_item_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_database_item_buttonActionPerformed
        SQL_con con = new SQL_con();
        con.setDatabaseItems();
        
        for (int i = 0; i < con.getDatabaseItems().size(); i++) {
            ta_databaseItems.append((String) con.getDatabaseItems().get(i));
        }
    }//GEN-LAST:event_database_item_buttonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bladerButton;
    private javax.swing.JButton controleerButton;
    private javax.swing.JButton database_item_button;
    private javax.swing.JButton exportORFButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton searchORFbutton;
    private javax.swing.JTextArea ta_Statistics;
    private javax.swing.JTextArea ta_databaseItems;
    private javax.swing.JTextField tf_Path;
    // End of variables declaration//GEN-END:variables

}
